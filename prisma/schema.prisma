generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  decks         Deck[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Card {
  id           Int         @id @default(autoincrement())
  gameId       String
  cardId       String
  name         String
  cost         String?
  power        String?
  counterPower String?
  life         String?
  artist       String?
  imageUrl     String
  effect       String?
  attribute    Attributes?
  rarity       Rarity
  color        String[]
  setId        String
  traits       String[]
  type         CardType?
  set          Sets        @relation(fields: [setId], references: [id], onUpdate: NoAction)
  Decks        Deck[]
  DeckCard     DeckCard[]
}

model Sets {
  id          String    @id @default(cuid())
  name        String
  releaseDate DateTime?
  imageUrl    String?
  setNumber   String?
  cards       Card[]
}

enum Attributes {
  NA
  SLASH
  STRIKE
  RANGED
  WISDOM
  SPECIAL
}

enum Rarity {
  TBD
  LEADER
  COMMON
  UNCOMMON
  RARE
  SUPERRARE
  SECRETRARE
  PROMO
  SPECIALRARE
}

enum CardType {
  LEADER
  CHARACTER
  EVENT
  STAGE
  DON
}

model Deck {
  id       String     @id @default(cuid())
  name     String
  colors   String[]
  leader   Card       @relation(fields: [leaderId], references: [id])
  leaderId Int
  cards    DeckCard[]
  User     User       @relation(fields: [userId], references: [id])
  userId   String
}

model DeckCard {
  id       String @id @default(cuid())
  quantity Int    @default(1)
  Deck     Deck   @relation(fields: [deckId], references: [id])
  deckId   String
  Card     Card   @relation(fields: [cardId], references: [id])
  cardId   Int
}

